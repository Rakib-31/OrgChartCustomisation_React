[{"I:\\OrgChart\\orgchart\\src\\index.js":"1","I:\\OrgChart\\orgchart\\src\\reportWebVitals.js":"2","I:\\OrgChart\\orgchart\\src\\App.js":"3","I:\\OrgChart\\orgchart\\src\\Portal.js":"4","I:\\OrgChart\\orgchart\\src\\modal\\questionModal.js":"5","I:\\OrgChart\\orgchart\\src\\component\\MyChart.js":"6","I:\\OrgChart\\orgchart\\src\\modal\\editModal.js":"7","I:\\OrgChart\\orgchart\\src\\modal\\QuestionModal.js":"8","I:\\OrgChart\\orgchart\\src\\modal\\EditModal.js":"9","I:\\OrgChart\\orgchart\\src\\FlowGraph\\index.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":215,"mtime":1607097451385,"results":"14","hashOfConfig":"12"},{"size":1118,"mtime":1607024626122,"results":"15","hashOfConfig":"12"},{"size":1643,"mtime":1607098127019,"results":"16","hashOfConfig":"12"},{"size":1464,"mtime":1607096963345,"results":"17","hashOfConfig":"12"},{"size":2491,"mtime":1607097332190,"results":"18","hashOfConfig":"12"},{"size":1643,"mtime":1607098127019,"results":"19","hashOfConfig":"12"},{"size":2491,"mtime":1607097332190,"results":"20","hashOfConfig":"12"},{"size":2494,"mtime":1607096838431,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"2azz1u",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"I:\\OrgChart\\orgchart\\src\\index.js",[],["45","46"],"I:\\OrgChart\\orgchart\\src\\reportWebVitals.js",[],"I:\\OrgChart\\orgchart\\src\\App.js",["47"],"I:\\OrgChart\\orgchart\\src\\Portal.js",[],["48","49"],"I:\\OrgChart\\orgchart\\src\\modal\\questionModal.js",["50","51","52","53"],"import React, {useState,useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\nimport '../css/modal.css';\r\n \r\nModal.setAppElement(document.getElementById('showQuestionModal'))\r\n \r\nexport default function QuestionModal(props){\r\n  var subtitle;\r\n  const [modalIsOpen,setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(props.showModal);\r\n  });\r\n\r\n  function showModal(){\r\n      \r\n          return (\r\n            <div className=\"text-center\" onClick={()=>props.closeModal(false)}>\r\n            \r\n            <Modal\r\n              isOpen={modalIsOpen}\r\n              contentLabel=\"Example Modal\" \r\n              centered\r\n            >\r\n                <div className=\"text-center ml-4\">\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}}  type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you happy today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}}  type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}}  type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you happy today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}}  type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}}  type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you happy today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}} type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                    <input onClick={(e) => props.selectedQuestion(e.target.value)} className=\"form-control\" style={{width: '500px', cursor: 'pointer'}}  type=\"text\" value=\"Are you feeling any pain today?\"/><br/>\r\n                </div>\r\n              </Modal>\r\n          </div>\r\n          );\r\n      \r\n  }\r\n \r\n    return (\r\n\r\n        <div>{showModal()}</div>\r\n      \r\n    );\r\n}","I:\\OrgChart\\orgchart\\src\\component\\MyChart.js",["54"],"I:\\OrgChart\\orgchart\\src\\modal\\editModal.js",["55","56","57","58"],"I:\\OrgChart\\orgchart\\src\\modal\\QuestionModal.js",["59","60","61"],"I:\\OrgChart\\orgchart\\src\\modal\\EditModal.js",["62","63"],"I:\\OrgChart\\orgchart\\src\\FlowGraph\\index.js",["64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":12},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},{"ruleId":"70","severity":1,"message":"76","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":16},{"ruleId":"70","severity":1,"message":"77","line":9,"column":7,"nodeType":"72","messageId":"73","endLine":9,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":12,"column":3,"nodeType":"72","endLine":12,"endColumn":12,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":31,"column":109,"nodeType":"83","endLine":31,"endColumn":133},{"ruleId":"84","severity":1,"message":"85","line":4,"column":1,"nodeType":"86","endLine":53,"endColumn":2},{"ruleId":"70","severity":1,"message":"76","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":16},{"ruleId":"70","severity":1,"message":"77","line":9,"column":7,"nodeType":"72","messageId":"73","endLine":9,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":12,"column":3,"nodeType":"72","endLine":12,"endColumn":12,"suggestions":"87"},{"ruleId":"81","severity":1,"message":"82","line":31,"column":109,"nodeType":"83","endLine":31,"endColumn":133},{"ruleId":"70","severity":1,"message":"76","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":16},{"ruleId":"70","severity":1,"message":"77","line":9,"column":7,"nodeType":"72","messageId":"73","endLine":9,"endColumn":15},{"ruleId":"78","severity":1,"message":"88","line":18,"column":3,"nodeType":"72","endLine":18,"endColumn":12,"suggestions":"89"},{"ruleId":"70","severity":1,"message":"76","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":16},{"ruleId":"78","severity":1,"message":"90","line":22,"column":3,"nodeType":"72","endLine":22,"endColumn":12,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":31,"column":17,"nodeType":"94","messageId":"95","endLine":31,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":67,"column":17,"nodeType":"94","messageId":"95","endLine":67,"endColumn":19},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["96"],["97"],"'ReactDOM' is defined but never used.","'subtitle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsOpen'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.showModal] as a second argument to the useEffect Hook.",["98"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["99"],"React Hook useEffect contains a call to 'setIsOpen'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.showQuestionModal] as a second argument to the useEffect Hook.",["100"],"React Hook useEffect contains a call to 'setIsOpen'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.showEditModal] as a second argument to the useEffect Hook.",["101"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"102","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Add dependencies array: [props.showModal]",{"range":"109","text":"110"},{"range":"111","text":"110"},"Add dependencies array: [props.showQuestionModal]",{"range":"112","text":"113"},"Add dependencies array: [props.showEditModal]",{"range":"114","text":"115"},[395,395],", [props.showModal]",[391,391],[566,566],", [props.showQuestionModal]",[670,670],", [props.showEditModal]"]